name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  install:
    runs-on: ubuntu-latest
    env:
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
      node-version: 16.x
    #strategy:
    #  matrix:
    #    os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --lockfile-only

  build:
    needs: [install]
    runs-on: ubuntu-latest
    env:
      node-version: 16.x
    strategy:
      fail-fast: false
      #matrix:
      #  os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Upload Build Output
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: website # optional, default is `artifact`
          # A file, directory or wildcard pattern that describes what to upload
          path: ./dist/

  test:
    needs: [install]
    env:
      node-version: 16.x
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          #- windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Test
        run: pnpm test

      - name: Upload Coverage
        uses: actions/upload-artifact@v2.2.4
        with:
          name: coverage-${{ matrix.os }}
          path: ./coverage/

  e2e:
    needs: [build]

    env:
      node-version: 16.x

    strategy:
      matrix:
        browser: [chrome, firefox, firefox-esr]
        #containers: [1, 2, 3]
        #os: [ubuntu-latest, windows-latest]
      fail-fast: false
      #max-parallel: 0

    # FIXME: For some reason it doesn't realize that the server is running
    if: false

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Chrome
        # You may pin to the exact commit or the version.
        uses: browser-actions/setup-chrome@v0.0.0
        if: ${{ matrix.browser == 'chrome' }}
        #with:
        #  # The Chromium version to install and use.
        #  chromium-version: # optional

      - name: Setup Firefox
        uses: browser-actions/setup-firefox@v0.0.0
        if: ${{ matrix.browser == 'firefox' }}

      - name: Setup Firefox-ESR
        uses: browser-actions/setup-firefox@v0.0.0
        if: ${{ matrix.browser == 'firefox-esr' }}
        with:
          # The Firefox version to install and use. Examples: 84.0, 84.0.1, latest-esr
          firefox-version: latest-esr

      - name: Download Build Folder
        uses: actions/download-artifact@v2
        with:
          name: website
          path: build

      - name: 'E2E Tests - ${{ matrix.browser }}'
        # https://github.com/marketplace/actions/cypress-io
        uses: cypress-io/github-action@v3
        with:
          # we have already installed all dependencies above
          install: false
          start: pnpm preview -- --host
          wait-on: 'http-get://localhost:5050'
          wait-on-timeout: 60
          #command: pnpm wait -- cypress run
          browser: ${{ matrix.browser }}
          record: true
          # TODO: When e2e takes to long, start parallelizing
          parallel: false
          tag: ${{ github.event_name }}
          group: 'E2E - ${{ matrix.browser }}'
          #spec: cypress/tests/ui/*
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # - if the event is push, the title will be undefined
          # and Cypress will get the commit message from Git information
          # - if the event is pull_request, then we set the commit
          # message to the pull request title
          COMMIT_INFO_MESSAGE: ${{ github.event.pull_request.title }}

      - name: Upload Videos
        uses: actions/upload-artifact@v2.2.4
        if: always()
        with:
          name: videos
          path: ./cypress/videos/

      - name: Upload Downloads
        uses: actions/upload-artifact@v2.2.4
        if: always()
        with:
          name: downloads
          path: ./cypress/downloads/

      - name: Upload Screenshots
        uses: actions/upload-artifact@v2.2.4
        if: always()
        with:
          name: screenshots
          path: ./cypress/screenshots/

  tsc:
    needs: [install]
    runs-on: ubuntu-latest
    env:
      node-version: 16.x
    strategy:
      fail-fast: false
      #matrix:
      #  os: [ubuntu-latest]

    # FIXME: For some reason i get an error that 'incremental mode is not yet supported'
    if: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  lint:
    needs: [install]
    runs-on: ubuntu-latest
    env:
      node-version: 16.x
    strategy:
      fail-fast: false
      #matrix:
      #  os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm run lint:check

  analysis:
    needs: [install]
    runs-on: ubuntu-latest
    env:
      node-version: 16.x
    strategy:
      fail-fast: false
      #matrix:
      #  os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: ^6

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Analyze
        run: pnpm run analysis:build

      - name: Upload analysis result
        uses: actions/upload-artifact@v2.2.4
        with:
          name: styles
          path: ./analysis/
